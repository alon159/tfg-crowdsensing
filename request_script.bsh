import org.json.JSONObject;
import org.json.JSONArray;
import com.apvereda.db.Entity;
import com.apvereda.db.Value;
import com.apvereda.db.Avatar;
import com.apvereda.utils.DigitalAvatarController;
import com.apvereda.uDataTypes.EntityType;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

JSONObject resultsjson = new JSONObject();
String result;

Entity crowdpoll = (Entity) dac.getAll("DA-Poll"+poll, type).get(0);
Value myresult = (Value) crowdpoll.get("myresult");
try{
    if (myresult != null){
        JSONObject myresultjson = new JSONObject(myresult.get());
        for (Iterator<String> it = myresultjson.keys(); it.hasNext(); ) {
            String key = it.next();
            JSONObject values = new JSONObject();
            values.put(question.getInt(key), 1);
            resultsjson.put(key, values);
        }
    }

    Value contactsResults = (Value) crowdpoll.get("results");
    if (contactsResults != null){
        JSONArray cresultsjson = new JSONArray(contactsResults.get());
        for(int i=0; i<cresultsjson.length(); i++){
            JSONObject cresult = cresultsjson.getJSONObject(i);
            for (Iterator<String> it = cresult.keys(); it.hasNext(); ) {
                String key = it.next();
                Map<Integer, Integer> values = myresultjson.get(key);
                if (values != null) {
                    if (values.containsKey(cresult.getInt(key))) {
                        values.put(cresult.getInt(key), values.get(cresult.getInt(key)) + 1);
                    } else {
                        values.put(cresult.getInt(key), 1);
                    }
                }
                resultsjson.put(key, values);
            }
        }
    }

    if (!resultsjson.isEmpty()){
    StringBuilder resultSB = new StringBuilder("{");
    for (Iterator<String> it = resultsjson.keys(); it.hasNext(); ) {
        String key = it.next();
        Map<Integer, Integer> values = resultsjson.get(key);
        resultSB.append("'").append(key).append("' : {");
        for (Integer value : values.keySet()) {
            resultSB.append("'").append(value).append("' : '").append(values.get(value)).append("' , ");
        }
        resultSB.delete(resultSB.length()-3, resultSB.length()-1);
        resultSB.append("} , ");
    }
    resultSB.delete(resultSB.length()-3, resultSB.length()-1);
    resultSB.append("}");
    result = resultSB.toString();
    }

} catch (JSONException e){
    throw new RuntimeException(e);
}
